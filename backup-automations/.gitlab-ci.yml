stages:
  - build
  - test
  - deploy
  - verify

variables:
  NODE_VERSION: "20"

# Cache modules between jobs
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - project/node_modules/

build:
  stage: build
  image: node:${NODE_VERSION}-alpine
  script:
    - cd project
    - npm ci
    - cp .env.production .env
    - npm run build
  artifacts:
    paths:
      - project/dist/
      - project/nginx-unified.conf
    expire_in: 1 week

lint:
  stage: test
  image: node:${NODE_VERSION}-alpine
  script:
    - cd project
    - npm ci
    - npm run lint

deploy_production:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client rsync
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
  script:
    # Backup da versão atual
    - ssh $SSH_USER@$SSH_HOST "sudo mkdir -p /var/www/duopass/backup/$(date +%Y%m%d_%H%M%S) && sudo cp -r /var/www/duopass/dist/* /var/www/duopass/backup/$(date +%Y%m%d_%H%M%S)/ 2>/dev/null || true"
    
    # Limpar pasta atual
    - ssh $SSH_USER@$SSH_HOST "sudo rm -rf /var/www/duopass/dist/*"
    
    # Enviar novos arquivos
    - rsync -avz --delete project/dist/ $SSH_USER@$SSH_HOST:/tmp/duopass-new/
    
    # Mover arquivos para local correto
    - ssh $SSH_USER@$SSH_HOST "sudo mkdir -p /var/www/duopass/dist && sudo cp -r /tmp/duopass-new/* /var/www/duopass/dist/ && sudo chown -R www-data:www-data /var/www/duopass/dist && sudo chmod -R 755 /var/www/duopass/dist"
    
    # Copiar configuração Nginx
    - scp project/nginx-unified.conf $SSH_USER@$SSH_HOST:/tmp/nginx-unified.conf
    - ssh $SSH_USER@$SSH_HOST "sudo cp /tmp/nginx-unified.conf /etc/nginx/sites-available/duopass && sudo ln -sf /etc/nginx/sites-available/duopass /etc/nginx/sites-enabled/ && sudo rm -f /etc/nginx/sites-enabled/default"
    
    # Testar e recarregar Nginx
    - ssh $SSH_USER@$SSH_HOST "sudo nginx -t && sudo systemctl reload nginx"
  only:
    - main
    - master
  environment:
    name: production
    url: https://duopassclub.ch

verify_deployment:
  stage: verify
  image: alpine:latest
  before_script:
    - apk add --no-cache curl
  script:
    # Verificar se o site está respondendo
    - curl -I https://duopassclub.ch
    - curl -I https://www.duopassclub.ch
    
    # Verificar se ambos retornam o mesmo conteúdo
    - |
      HASH1=$(curl -s https://duopassclub.ch | md5sum | cut -d' ' -f1)
      HASH2=$(curl -s https://www.duopassclub.ch | md5sum | cut -d' ' -f1)
      
      if [ "$HASH1" = "$HASH2" ]; then
        echo "✅ Conteúdo sincronizado - ambos os domínios iguais"
      else
        echo "❌ DESSINCRONIZAÇÃO DETECTADA - conteúdos diferentes!"
        echo "Hash duopassclub.ch: $HASH1"
        echo "Hash www.duopassclub.ch: $HASH2"
        exit 1
      fi
  only:
    - main
    - master
  dependencies:
    - deploy_production