#!/usr/bin/env node

// üé≠ DUOPASS - PLANO COMPLETO DE SINCRONIZA√á√ÉO
// Este script executa todo o plano de sincroniza√ß√£o dev ‚Üí produ√ß√£o

const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

console.log('üé≠ DUOPASS - PLANO COMPLETO DE SINCRONIZA√á√ÉO');
console.log('============================================');
console.log('üéØ Objetivo: Sincronizar desenvolvimento com produ√ß√£o');
console.log('üåê Dom√≠nio: duopassclub.ch');
console.log('');

// Verificar se estamos na pasta correta
if (!fs.existsSync('package.json')) {
  console.error('‚ùå ERRO: Execute este script na pasta /project/');
  console.error('üí° Solu√ß√£o: cd project && node executar-plano-completo.cjs');
  process.exit(1);
}

console.log('‚úÖ Pasta correta detectada');

// Verificar arquivos necess√°rios
const arquivosNecessarios = [
  'EXECUTE_NO_SUPABASE.sql',
  'INSTRUCOES_DEPLOY_SYNC.md',
  'nginx-unified.conf',
  'verificar-sync.sh'
];

let arquivosFaltando = [];
for (const arquivo of arquivosNecessarios) {
  if (!fs.existsSync(arquivo)) {
    arquivosFaltando.push(arquivo);
  }
}

if (arquivosFaltando.length > 0) {
  console.error('‚ùå ERRO: Arquivos necess√°rios n√£o encontrados:');
  arquivosFaltando.forEach(arquivo => console.error(`   - ${arquivo}`));
  process.exit(1);
}

console.log('‚úÖ Todos os arquivos necess√°rios encontrados');

// Fun√ß√£o para criar resumo do plano
function criarResumoPlano() {
  const resumo = `# üé≠ PLANO COMPLETO DE SINCRONIZA√á√ÉO - DuoPass

## üéØ OBJETIVO
Sincronizar o ambiente de desenvolvimento com a produ√ß√£o em \`duopassclub.ch\`

## üîç PROBLEMAS IDENTIFICADOS
- ‚ùå Tabelas \`cultural_experiences\` n√£o existem no Supabase de produ√ß√£o
- ‚ùå Servidor pode estar servindo build desatualizado
- ‚ùå Poss√≠vel configura√ß√£o nginx incorreta
- ‚ùå Dessincroniza√ß√£o entre dev e produ√ß√£o

## üöÄ PLANO DE EXECU√á√ÉO

### PASSO 1: Criar Tabelas no Supabase ‚è≥
**Status:** PENDENTE - A√á√ÉO MANUAL NECESS√ÅRIA

**Instru√ß√µes:**
1. Acesse: https://app.supabase.com/project/rnzvbrlbcnknyhrgubqi/sql/new
2. Copie TODO o conte√∫do do arquivo: \`EXECUTE_NO_SUPABASE.sql\`
3. Cole no SQL Editor e clique em "RUN"
4. Aguarde a execu√ß√£o completa

**Resultado esperado:**
- ‚úÖ Tabela \`cultural_partners\` criada
- ‚úÖ Tabela \`cultural_experiences\` criada
- ‚úÖ Tabela \`experience_stories\` criada
- ‚úÖ Tabela \`cultural_connections\` criada
- ‚úÖ Pol√≠ticas RLS configuradas
- ‚úÖ Dados de exemplo inseridos

### PASSO 2: Sincronizar Build com Servidor ‚úÖ
**Status:** PREPARADO

**Arquivos prontos:**
- ‚úÖ Build atualizado na pasta \`dist/\`
- ‚úÖ Instru√ß√µes detalhadas em \`INSTRUCOES_DEPLOY_SYNC.md\`
- ‚úÖ Script de verifica√ß√£o \`verificar-sync.sh\`

**Comandos principais:**
\`\`\`bash
# No servidor (SSH):
sudo rm -rf /var/www/duopass/dist/*

# Do seu computador local:
scp -r dist/* seu-usuario@duopassclub.ch:/tmp/duopass-new/

# No servidor:
sudo cp -r /tmp/duopass-new/* /var/www/duopass/dist/
sudo chown -R www-data:www-data /var/www/duopass/dist
\`\`\`

### PASSO 3: Aplicar Configura√ß√£o Nginx ‚úÖ
**Status:** PREPARADO

**Arquivo:** \`nginx-unified.conf\`

**Comandos:**
\`\`\`bash
# Enviar configura√ß√£o:
scp nginx-unified.conf seu-usuario@duopassclub.ch:/tmp/

# No servidor:
sudo cp /tmp/nginx-unified.conf /etc/nginx/sites-available/duopass
sudo ln -sf /etc/nginx/sites-available/duopass /etc/nginx/sites-enabled/
sudo nginx -t
sudo systemctl reload nginx
\`\`\`

### PASSO 4: Verifica√ß√£o Final ‚úÖ
**Status:** PREPARADO

**Script:** \`verificar-sync.sh\`

**Comandos:**
\`\`\`bash
# No servidor:
bash verificar-sync.sh

# Teste manual:
curl -I https://duopassclub.ch
curl -I https://www.duopassclub.ch
\`\`\`

## üìã ORDEM DE EXECU√á√ÉO

1. **PRIMEIRO:** Execute SQL no Supabase (MANUAL)
2. **SEGUNDO:** Siga \`INSTRUCOES_DEPLOY_SYNC.md\`
3. **TERCEIRO:** Aplique \`nginx-unified.conf\`
4. **QUARTO:** Execute \`verificar-sync.sh\`
5. **QUINTO:** Limpe cache do navegador (Ctrl+F5)

## üéâ RESULTADO ESPERADO

Ap√≥s completar todos os passos:
- ‚úÖ \`duopassclub.ch\` e \`www.duopassclub.ch\` mostram conte√∫do id√™ntico
- ‚úÖ Experi√™ncias culturais funcionam (tabelas criadas)
- ‚úÖ Navega√ß√£o SPA funciona corretamente
- ‚úÖ SSL v√°lido em ambos os dom√≠nios
- ‚úÖ Performance otimizada
- ‚úÖ Sincroniza√ß√£o completa dev ‚Üî produ√ß√£o

## ‚è±Ô∏è TEMPO ESTIMADO
**15-30 minutos** (incluindo tempo de upload)

## üÜò SUPORTE
Se encontrar problemas:
1. Verifique logs: \`sudo tail -f /var/log/nginx/duopass_error.log\`
2. Teste conectividade: \`curl -I https://duopassclub.ch\`
3. Verifique arquivos: \`ls -la /var/www/duopass/dist/\`

---
**Gerado em:** ${new Date().toLocaleString('pt-BR')}
**Status:** Plano preparado - Aguardando execu√ß√£o manual do Supabase
**Pr√≥ximo passo:** Executar SQL no Supabase SQL Editor
`;

  fs.writeFileSync('PLANO_COMPLETO_SINCRONIZACAO.md', resumo);
  return resumo;
}

// Fun√ß√£o principal
function executarPlanoCompleto() {
  try {
    console.log('\nüìã CRIANDO PLANO COMPLETO...');
    
    // Criar resumo do plano
    criarResumoPlano();
    console.log('‚úÖ Arquivo criado: PLANO_COMPLETO_SINCRONIZACAO.md');
    
    // Verificar status do build
    const distExists = fs.existsSync('dist');
    const distStats = distExists ? fs.statSync('dist') : null;
    
    console.log('\nüì¶ STATUS DO BUILD:');
    if (distExists && distStats) {
      const ageBuild = (Date.now() - distStats.mtime.getTime()) / (1000 * 60); // em minutos
      console.log(`‚úÖ Build existe (criado h√° ${ageBuild.toFixed(1)} minutos)`);
      
      if (ageBuild > 60) {
        console.log('‚ö†Ô∏è Build pode estar desatualizado (>1h)');
        console.log('üí° Considere executar: npm run build');
      }
    } else {
      console.log('‚ùå Build n√£o encontrado');
      console.log('üí° Execute: npm run build');
    }
    
    console.log('\nüéØ PLANO COMPLETO PREPARADO!');
    console.log('=====================================');
    
    console.log('\nüìã PR√ìXIMOS PASSOS OBRIGAT√ìRIOS:');
    console.log('\n1. üé≠ CRIAR TABELAS NO SUPABASE (MANUAL):');
    console.log('   ‚Üí Acesse: https://app.supabase.com/project/rnzvbrlbcnknyhrgubqi/sql/new');
    console.log('   ‚Üí Copie conte√∫do de: EXECUTE_NO_SUPABASE.sql');
    console.log('   ‚Üí Cole no SQL Editor e clique "RUN"');
    
    console.log('\n2. üöÄ SINCRONIZAR ARQUIVOS:');
    console.log('   ‚Üí Leia: INSTRUCOES_DEPLOY_SYNC.md');
    console.log('   ‚Üí Execute comandos SSH conforme instru√ß√µes');
    
    console.log('\n3. ‚öôÔ∏è APLICAR NGINX:');
    console.log('   ‚Üí Envie: nginx-unified.conf para servidor');
    console.log('   ‚Üí Configure conforme instru√ß√µes');
    
    console.log('\n4. ‚úÖ VERIFICAR:');
    console.log('   ‚Üí Execute: verificar-sync.sh no servidor');
    console.log('   ‚Üí Teste: https://duopassclub.ch');
    console.log('   ‚Üí Limpe cache do navegador (Ctrl+F5)');
    
    console.log('\nüìÑ ARQUIVOS CRIADOS:');
    console.log('   ‚úÖ PLANO_COMPLETO_SINCRONIZACAO.md (este plano)');
    console.log('   ‚úÖ INSTRUCOES_SUPABASE_MANUAL.md (instru√ß√µes Supabase)');
    console.log('   ‚úÖ INSTRUCOES_DEPLOY_SYNC.md (instru√ß√µes deploy)');
    console.log('   ‚úÖ verificar-sync.sh (script verifica√ß√£o)');
    console.log('   ‚úÖ nginx-unified.conf (configura√ß√£o nginx)');
    
    console.log('\n‚è±Ô∏è TEMPO ESTIMADO: 15-30 minutos');
    console.log('üéØ RESULTADO: Sincroniza√ß√£o completa dev ‚Üî produ√ß√£o');
    
  } catch (error) {
    console.error('‚ùå ERRO:', error.message);
    console.log('\nüí° SOLU√á√ÉO ALTERNATIVA:');
    console.log('1. Execute manualmente cada passo');
    console.log('2. Consulte os arquivos de instru√ß√µes criados');
    console.log('3. Teste a aplica√ß√£o ap√≥s cada passo');
  }
}

// Executar plano completo
executarPlanoCompleto();